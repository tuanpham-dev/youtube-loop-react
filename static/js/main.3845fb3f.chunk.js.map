{"version":3,"sources":["Header.jsx","loadYouTubeAPI.js","YouTube.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","props","state","input","handleInputChange","bind","handleSubmit","event","this","setState","target","value","url","parsedUrl","replace","split","undefined","videoId","getYouTubeVideoId","onAddVideo","className","href","isPlaying","onClick","onStop","onPlay","showPrevNext","onPreviousVideo","onNextVideo","type","placeholder","onChange","Component","defaultProps","api","getYouTubeAPI","Promise","resolve","reject","window","YT","ready","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","YouTube","container","React","createRef","handleReady","playerInstance","playVideo","nextProps","stopVideo","player","loadYoutubeAPI","then","Player","current","events","onReady","onStateChange","data","PlayerState","PLAYING","PAUSED","onPause","ENDED","onEnd","ref","App","videos","playingVideo","nextId","addVideo","stopPlaying","playFirstVideo","playPreviousVideo","playNextVideo","savedVideos","localStorage","get","forEach","video","push","id","getNextId","youtubeVideoId","length","set","i","splice","currentVideo","findPlayingVideoIndex","map","key","handleVideoPlay","handleVideoEnd","moveVideoUp","moveVideoDown","removeVideo","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3845fb3f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Header extends Component {\n  static propTypes = {\n    isPlaying: PropTypes.bool,\n    showPrevNext: PropTypes.bool,\n    onPlay: PropTypes.func,\n    onStop: PropTypes.func,\n    onAddVideo: PropTypes.func,\n    onNextVideo: PropTypes.func,\n    onPreviousVideo: PropTypes.func\n  }\n\n  static defaultProps = {\n    isPlaying: false,\n    showPrevNext: false,\n    onPlay: () => {},\n    onStop: () => {},\n    onAddVideo: (videoId) => {},\n    onNextVideo: () => {},\n    onPreviousVideo: () => {}\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      input: ''\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  getYouTubeVideoId(url) {\n    let videoId = ''\n    const parsedUrl = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/)\n\n    if (parsedUrl[2] !== undefined) {\n      videoId = parsedUrl[2].split(/[^0-9a-z_-]/i)\n      videoId = videoId[0]\n    } else {\n      videoId = parsedUrl\n    }\n\n    return videoId\n  }\n\n  handleSubmit() {\n    const videoId = this.getYouTubeVideoId(this.state.input)\n\n    if (videoId) {\n      this.props.onAddVideo(videoId)\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"sticky-top navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"container\">\n          <a className=\"navbar-brand font-weight-bold text-uppercase\" href=\"/\">Youtube Loop</a>\n          <div className=\"ml-3 d-flex\">\n            {!this.props.isPlaying ?\n              <button className=\"btn btn-secondary mr-1\" onClick={this.props.onPlay}>Play</button>\n              :\n              <button className=\"btn btn-secondary mr-1\" onClick={this.props.onStop}>Stop</button>\n            }\n            {this.props.showPrevNext &&\n              <>\n                <button className=\"btn btn-secondary mr-1\" onClick={this.props.onPreviousVideo}>Previous</button>\n                <button className=\"btn btn-secondary mr-1\" onClick={this.props.onNextVideo}>Next</button>\n              </>\n            }\n          </div>\n          <div className=\"ml-5 input-group\">\n            <input className=\"form-control\" type=\"text\" placeholder=\"Enter YouTube URL or Video ID\" value={this.state.value} onChange={this.handleInputChange} />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-primary\" type=\"button\" onClick={this.handleSubmit}>Go Loop!</button>\n            </div>\n          </div>\n        </div>\n      </header>\n    )\n  }\n}\n","/* global window */\n\nfunction loadYouTubeAPI() {\n  return new Promise((resolve, reject) => {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      window.YT.ready(() => {\n        resolve(window.YT)\n      })\n\n      return\n    }\n\n    const tag = document.createElement('script')\n    tag.src = 'https://www.youtube.com/iframe_api'\n    const firstScriptTag = document.getElementsByTagName('script')[0]\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n\n    window.onYouTubeIframeAPIReady = () => {\n      resolve(window.YT)\n    }\n  })\n}\n\nlet api = null\n\nexport default function getYouTubeAPI() {\n  if (!api) {\n    api = loadYouTubeAPI()\n  }\n\n  return api\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport loadYoutubeAPI from './loadYouTubeAPI'\n\nexport default class YouTube extends Component {\n  static propTypes = {\n    videoId: PropTypes.string,\n    isPlaying: PropTypes.bool,\n    onReady: PropTypes.func,\n    onPlay: PropTypes.func,\n    onPause: PropTypes.func,\n    onEnd: PropTypes.func,\n  }\n\n  static defaultProps = {\n    isPlaying: false,\n    onReady: () => {},\n    onPlay: () => {},\n    onPause: () => {},\n    onEnd: () => {}\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = React.createRef()\n    this.handleReady = this.handleReady.bind(this)\n  }\n\n  handleReady() {\n    if (this.props.isPlaying) {\n      this.playerInstance.playVideo()\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (typeof this.playerInstance === 'object' && typeof this.playerInstance.playVideo === 'function') {\n      if (nextProps.isPlaying) {\n        this.playerInstance.playVideo()\n      } else {\n        this.playerInstance.stopVideo()\n      }\n    }\n\n    return nextProps.videoId !== this.props.videoId\n  }\n\n  componentDidMount() {\n    this.player = loadYoutubeAPI().then(YT => {\n      this.playerInstance = new YT.Player(this.container.current, {\n        videoId: this.props.videoId,\n        events: {\n          onReady: this.handleReady,\n          onStateChange: (event) => {\n            if (event.data === YT.PlayerState.PLAYING) {\n              this.props.onPlay()\n            } else if (event.data === YT.PlayerState.PAUSED) {\n              this.props.onPause()\n            } else if (event.data === YT.PlayerState.ENDED) {\n              this.props.onEnd()\n            }\n          }\n        }\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div ref={this.container} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport localStorage from 'local-storage'\nimport Header from './Header'\nimport YouTube from './YouTube'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      videos: [],\n      playingVideo: -1\n    }\n\n    this.nextId = 0\n    this.addVideo = this.addVideo.bind(this)\n    this.stopPlaying = this.stopPlaying.bind(this)\n    this.playFirstVideo = this.playFirstVideo.bind(this)\n    this.playPreviousVideo = this.playPreviousVideo.bind(this)\n    this.playNextVideo = this.playNextVideo.bind(this)\n  }\n\n  getNextId() {\n    return this.nextId++\n  }\n\n  componentDidMount() {\n    const savedVideos = localStorage.get('videos')\n    const videos = []\n\n    if (savedVideos) {\n      savedVideos.forEach(video => {\n        videos.push({\n          id: this.getNextId(),\n          video: video.video\n        })\n      })\n\n      this.setState({\n        videos\n      })\n    }\n  }\n\n  addVideo(youtubeVideoId) {\n    const nextId = this.getNextId()\n    const videos = [...this.state.videos, {\n      id: nextId,\n      video: youtubeVideoId\n    }]\n\n    this.setState({\n      videos,\n      playingVideo: this.state.videos.length === 0 ? nextId : this.state.playingVideo\n    })\n\n    localStorage.set('videos', videos)\n  }\n\n  removeVideo(i) {\n    const videos = [...this.state.videos]\n    videos.splice(i, 1)\n\n    this.setState({\n      videos,\n      playingVideo: this.state.playingVideo === this.state.videos[i].id ? -1 : this.state.playingVideo\n    })\n\n    localStorage.set('videos', videos)\n  }\n\n  moveVideoUp(i) {\n    const videos = [...this.state.videos]\n    const currentVideo = videos[i]\n\n    videos.splice(i, 1)\n    videos.splice(i - 1, 0, currentVideo)\n\n    this.setState({\n      videos\n    })\n\n    localStorage.set('videos', videos)\n  }\n\n  moveVideoDown(i) {\n    const videos = [...this.state.videos]\n    const currentVideo = videos[i]\n\n    videos.splice(i, 1)\n    videos.splice(i + 1, 0, currentVideo)\n\n    this.setState({\n      videos\n    })\n\n    localStorage.set('videos', videos)\n  }\n\n  stopPlaying() {\n    this.setState({\n      playingVideo: -1\n    })\n  }\n\n  playFirstVideo() {\n    if (this.state.videos.length > 0) {\n      this.setState({\n        playingVideo: this.state.videos[0].id\n      })\n    }\n  }\n\n  findPlayingVideoIndex(id) {\n    for (let i = 0; i < this.state.videos.length; i++) {\n      if (this.state.videos[i].id === this.state.playingVideo) {\n        return i\n      }\n    }\n\n    return 0\n  }\n\n  playNextVideo() {\n    let playingVideo = -1\n    const i = this.findPlayingVideoIndex()\n\n    if (i === this.state.videos.length - 1) {\n      playingVideo = this.state.videos[0].id\n    } else {\n      playingVideo = this.state.videos[i + 1].id\n    }\n\n    this.setState({ playingVideo })\n  }\n\n  playPreviousVideo() {\n    let playingVideo = -1\n    const i = this.findPlayingVideoIndex()\n\n    if (i === 0) {\n      playingVideo = this.state.videos[this.state.videos.length - 1].id\n    } else {\n      playingVideo = this.state.videos[i - 1].id\n    }\n\n    this.setState({ playingVideo })\n  }\n\n  handleVideoPlay(i) {\n    this.setState({\n      playingVideo: this.state.videos[i].id\n    })\n  }\n\n  handleVideoEnd(i) {\n    this.playNextVideo()\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          isPlaying={this.state.playingVideo !== -1}\n          showPrevNext={this.state.videos.length > 1}\n          onAddVideo={this.addVideo}\n          onPlay={this.playFirstVideo}\n          onStop={this.stopPlaying}\n          onPreviousVideo={this.playPreviousVideo}\n          onNextVideo={this.playNextVideo}\n        />\n\n        <div className=\"container mt-5\">\n          <ol className=\"video-list\">\n            {this.state.videos.map((video, i) => (\n              <li key={video.id} className=\"video-item d-flex flex-column justify-content-center align-items-center mb-5\">\n                <YouTube\n                  isPlaying={video.id === this.state.playingVideo}\n                  videoId={video.video}\n                  onPlay={() => this.handleVideoPlay(i)}\n                  onEnd={() => this.handleVideoEnd(i)}\n                />\n\n                <div className=\"text-center mt-3\">\n                  {i > 0 &&\n                    <button className=\"btn btn-secondary mr-1\" onClick={() => this.moveVideoUp(i)}>Move Up</button>\n                  }\n\n                  {i < this.state.videos.length - 1 &&\n                    <button className=\"btn btn-secondary mr-1\" onClick={() => this.moveVideoDown(i)}>Move Down</button>\n                  }\n\n                  <button className=\"btn btn-danger\" onClick={() => this.removeVideo(i)}>Remove Video</button>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n      </>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}